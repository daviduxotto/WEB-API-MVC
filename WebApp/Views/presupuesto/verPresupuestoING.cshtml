@model List<Entidades.ePresupuesto>

@{
    ViewBag.Title = "Presupuesto";
    double subtotal = 0;
    double total = 0;
    double[] totales = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
}


@if (ViewBag.retorno != null)
{
    if (Convert.ToInt32(ViewBag.retorno) >= 1)
    {
        <div class="alert alert-info">@ViewBag.mensaje</div>
    }
    else
    {
        <div class="alert alert-warning">@ViewBag.mensaje</div>
    }
}

<table class="table table-sm">
    <thead class="thead-dark">
        <tr>

            <th scope="col">Empresa</th>
            <th scope="col">Unidad De Negocio</th>
            <th scope="col">Area</th>
            <th scope="col">Departamento</th>
            <th scope="col">Tipo Presupuesto</th>
        </tr>
    </thead>
    <tbody>
        <tr>

            <td>@ViewBag.empresa</td>
            <td>@ViewBag.estacion</td>
            <td>@ViewBag.area </td>
            <td>@ViewBag.departamento</td>
            <td>@ViewBag.tipopresupuesto</td>
        </tr>
    </tbody>
</table>
@using (Html.BeginForm("guardarPresupuestoING", "presupuesto", FormMethod.Post))
{

    <div class="form-horizontal">

        <table id="tabla" class="table table-bordered table-hover display">
            <thead>
                <tr>

                    <th class="input-sm">PRODUCTO</th>
                    <th class="input-sm "> <div style="width:80px">ENERO</div></th>
                    <th class="input-sm "><div style="width:80px">FEBRERO</div></th>
                    <th class="input-sm "><div style="width:80px">MARZO</div></th>
                    <th class="input-sm "><div style="width:80px">ABRIL</div></th>
                    <th class="input-sm "><div style="width:80px">MAYO</div></th>
                    <th class="input-sm "><div style="width:80px">JUNIO</div></th>
                    <th class="input-sm "><div style="width:80px">JULIO</div></th>
                    <th class="input-sm "><div style="width:80px">AGOSTO</div></th>
                    <th class="input-sm "><div style="width:80px">SEPTIEMBRE</div></th>
                    <th class="input-sm "><div style="width:80px">OCTUBRE</div></th>
                    <th class="input-sm "><div style="width:80px">NOVIEMBRE</div></th>
                    <th class="input-sm "><div style="width:80px">DICIEMBRE</div></th>
                    <th class="input-sm "><div style="width:80px">SUBTOTAL</div></th>
                </tr>
            </thead>

            <tbody>
                @for (int i = 0; i < Model.Count; i++)
                {
                    subtotal = Model[i].pres01 + Model[i].pres02 + Model[i].pres03 + Model[i].pres04 + Model[i].pres05 + Model[i].pres06 + Model[i].pres07 + Model[i].pres08 + Model[i].pres09 + Model[i].pres10 + Model[i].pres11 + Model[i].pres12;
                    total = total + subtotal;

                    totales[1] += Model[i].pres01;
                    totales[2] += Model[i].pres02;
                    totales[3] += Model[i].pres03;
                    totales[4] += Model[i].pres04;
                    totales[5] += Model[i].pres05;
                    totales[6] += Model[i].pres06;
                    totales[7] += Model[i].pres07;
                    totales[8] += Model[i].pres08;
                    totales[9] += Model[i].pres09;
                    totales[10] += Model[i].pres10;
                    totales[11] += Model[i].pres11;
                    totales[12] += Model[i].pres12;
                    <tr>


                        <td class="input-sm">
                            @Model[i].descProducto
                        </td>
                        @Html.EditorFor(model => @Model[i].claseProducto, new { htmlAttributes = new { @class = "hidden" } })
                        @Html.EditorFor(model => @Model[i].familiaProducto, new { htmlAttributes = new { @class = "hidden" } })
                        @Html.EditorFor(model => @Model[i].codProducto, new { htmlAttributes = new { @class = "hidden" } })
                        <td>
                            @Html.EditorFor(model => @Model[i].pres01, new { htmlAttributes = new { @class = "form-control input-sm pull-right celda", @style = "text-align:right" } })

                        </td>
                        <td>
                            @Html.EditorFor(model => @Model[i].pres02, new { htmlAttributes = new { @class = "form-control input-sm ", @style = "text-align:right" } })
                        </td>
                        <td>
                            @Html.EditorFor(model => @Model[i].pres03, new { htmlAttributes = new { @class = "form-control input-sm ", @style = "text-align:right" } })
                        </td>
                        <td>
                            @Html.EditorFor(model => @Model[i].pres04, new { htmlAttributes = new { @class = "form-control input-sm ", @style = "text-align:right" } })
                        </td>
                        <td>
                            @Html.EditorFor(model => @Model[i].pres05, new { htmlAttributes = new { @class = "form-control input-sm ", @style = "text-align:right" } })
                        </td>
                        <td>
                            @Html.EditorFor(model => @Model[i].pres06, new { htmlAttributes = new { @class = "form-control input-sm ", @style = "text-align:right" } })
                        </td>
                        <td>
                            @Html.EditorFor(model => @Model[i].pres07, new { htmlAttributes = new { @class = "form-control input-sm ", @style = "text-align:right" } })
                        </td>
                        <td>
                            @Html.EditorFor(model => @Model[i].pres08, new { htmlAttributes = new { @class = "form-control input-sm ", @style = "text-align:right" } })
                        </td>
                        <td>
                            @Html.EditorFor(model => @Model[i].pres09, new { htmlAttributes = new { @class = "form-control input-sm ", @style = "text-align:right" } })
                        </td>
                        <td>
                            @Html.EditorFor(model => @Model[i].pres10, new { htmlAttributes = new { @class = "form-control input-sm ", @style = "text-align:right" } })
                        </td>
                        <td>
                            @Html.EditorFor(model => @Model[i].pres11, new { htmlAttributes = new { @class = "form-control input-sm ", @style = "text-align:right" } })
                        </td>
                        <td>
                            @Html.EditorFor(model => @Model[i].pres12, new { htmlAttributes = new { @class = "form-control input-sm ", @style = "text-align:right" } })
                        </td>
                        <td style="text-align:right" class="number"> @subtotal</td>

                    </tr>
                }

                <tr>

                    <td>TOTAL:</td>
                    <td style="text-align:right" class="number">  @totales[1]</td>
                    <td style="text-align:right" class="number">  @totales[2]</td>
                    <td style="text-align:right" class="number">  @totales[3]</td>
                    <td style="text-align:right" class="number">  @totales[4]</td>
                    <td style="text-align:right" class="number">  @totales[5]</td>
                    <td style="text-align:right" class="number">  @totales[6]</td>
                    <td style="text-align:right" class="number">  @totales[7]</td>
                    <td style="text-align:right" class="number">  @totales[8]</td>
                    <td style="text-align:right" class="number">  @totales[9]</td>
                    <td style="text-align:right" class="number">  @totales[10]</td>
                    <td style="text-align:right" class="number">  @totales[11]</td>
                    <td style="text-align:right" class="number">  @totales[12]</td>
                    <td style="text-align:right" class="number">  @total</td>
                </tr>
            </tbody>
        </table>




        <div class="form-group">
            <div class="btn-group">
                <input type="submit" value="Guardar" class="btn btn-primary" />

                @Html.ActionLink("Ver Informe", "verInformePresupuestoING", "presupuesto", "", new { @class = "btn btn-primary" })


                @Html.ActionLink("Salir al Menú", "index", "home", "", new { @class = "btn btn-danger" })

            </div>
        </div>
    </div>
}


@section scripts
{
    <script src="~/Scripts/jquery-number.js"></script>

    <script>
        $(document).ready(function () {
            //   $("input").number(true);
            $(".number").number(true);
            $("input").change(function () {

                var totales = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
                //vamos a rrecorer la tabla
                $("#tabla tbody tr").each(function (i) {
                    var subtotal = 0; //unicamente para la columna que se calula
                    var subtotales = Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
                    $(this).children("td").each(function (j) {
                        if (j >= 1 && j <= 12) {
                            subtotal = parseFloat(subtotal) + parseFloat($(this).children("input").val());
                            subtotales[j] = parseFloat($(this).children("input").val());
                        }
                        if (j == 13) {
                            $(this).html(" " + subtotal);
                            subtotales[j] = parseFloat(subtotal);
                        }
                    });

                    if (i < ($("#tabla tbody tr").length - 1)) {
                        totales[1] = parseFloat(totales[1]) + parseFloat(subtotales[1]);
                        totales[2] = parseFloat(totales[2]) + parseFloat(subtotales[2]);
                        totales[3] = parseFloat(totales[3]) + parseFloat(subtotales[3]);
                        totales[4] = parseFloat(totales[4]) + parseFloat(subtotales[4]);
                        totales[5] = parseFloat(totales[5]) + parseFloat(subtotales[5]);
                        totales[6] = parseFloat(totales[6]) + parseFloat(subtotales[6]);
                        totales[7] = parseFloat(totales[7]) + parseFloat(subtotales[7]);
                        totales[8] = parseFloat(totales[8]) + parseFloat(subtotales[8]);
                        totales[9] = parseFloat(totales[9]) + parseFloat(subtotales[9]);
                        totales[10] = parseFloat(totales[10]) + parseFloat(subtotales[10]);
                        totales[11] = parseFloat(totales[11]) + parseFloat(subtotales[11]);
                        totales[12] = parseFloat(totales[12]) + parseFloat(subtotales[12]);
                        totales[13] = parseFloat(totales[13]) + parseFloat(subtotales[13]);

                    }
                    else {
                        $(this).find("td").eq(1).html(" " + totales[1]);
                        $(this).find("td").eq(2).html(" " + totales[2]);
                        $(this).find("td").eq(3).html(" " + totales[3]);
                        $(this).find("td").eq(4).html(" " + totales[4]);
                        $(this).find("td").eq(5).html(" " + totales[5]);
                        $(this).find("td").eq(6).html(" " + totales[6]);
                        $(this).find("td").eq(7).html(" " + totales[7]);
                        $(this).find("td").eq(8).html(" " + totales[8]);
                        $(this).find("td").eq(9).html(" " + totales[9]);
                        $(this).find("td").eq(10).html(" " + totales[10]);
                        $(this).find("td").eq(11).html(" " + totales[11]);
                        $(this).find("td").eq(12).html(" " + totales[12]);
                        $(this).find("td").eq(13).html(" " + totales[13]);

                    }
                });
                $(".number").number(true);
            });

            $('#tabla').stickyTableHeaders();
        });
    </script>
}
