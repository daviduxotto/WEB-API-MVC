@model Entidades.eFacturaCajaChica

@using (Html.BeginForm("guardarCambioCodigo", "facturaCajaChica", FormMethod.Post, new { id = "popupForm" }))
{
    <h3>Cambio de código de factura </h3>
    <strong>Documento No. @ViewBag.numero</strong>
    <div class="form-horizontal">
        <hr />
        @Html.EditorFor(model => model.codProveedor, new { htmlAttributes = new { @class = "hidden" } })
        @Html.EditorFor(model => model.codDoctoCxP, new { htmlAttributes = new { @class = "hidden" } })
        @Html.EditorFor(model => model.serie, new { htmlAttributes = new { @class = "hidden" } })
        @Html.EditorFor(model => model.numero, new { htmlAttributes = new { @class = "hidden" } })

        <div class="form-group">
            <label class="control-label col-md-2" for="serieNuevo">Serie</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.serieNuevo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.serieNuevo)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="numeroNuevo">Número</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.numeroNuevo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.numeroNuevo)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-primary" />
            </div>
        </div>
    </div>
}


@section scripts
{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script>
        $(document).ready(function () {
            // Listado de proveedores
            $.getJSON('/proveedor/getProveedorCajaChicaxEmpresa', null, function (data) {
                $.each(data, function () {
                    $('#codProveedor').append('<option value=' +
                        this.codProveedor + '>' + this.descProveedor + '</option>');
                    var parProveedorAnterior = $('#codProveedorAnterior').val();
                    if (parProveedorAnterior != "") {
                        $('#codProveedor').find('option[value=' + parProveedorAnterior + ']').attr('selected', 'selected');
                        // $('#codProveedor').attr('disabled', true);
                    }
                });
                // fin de obtener proveedores
            }).fail(function (jqXHR, textStatus, errorThrown) {
                alert('Error al obtener Proveedores!');
            });

            // Listado de Tipo de documentos por Pagar
            $.getJSON('/doctoCxP/getDoctoCxPxEmpresa', null, function (data) {
                $.each(data, function () {
                    $('#codDoctoCxP').append('<option value=' +
                        this.codDoctoCxP + '>' + this.descDoctoCxP + '</option>');
                    var parcodDoctoCxPAnterior = $('#codDoctoCxPAnterior').val();
                    if (parcodDoctoCxPAnterior != "") {
                        $('#codDoctoCxP').find('option[value=' + parcodDoctoCxPAnterior + ']').attr('selected', 'selected');
                        //  $('#codDoctoCxP').attr('disabled', true);
                    }
                });
                // fin de obtener proveedores
            }).fail(function (jqXHR, textStatus, errorThrown) {
                alert('Error al obtener Documentos!');
            });
            $('#codDoctoCxP').hide();
            $('#codProveedor').hide();
        });
    </script>
}