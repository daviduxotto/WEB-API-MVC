@model  Entidades.ePresupuesto

<div class="container">

    @using (Html.BeginForm("VerInformeVolumenRetailxSucursal", "presupuesto", FormMethod.Post))
    {
    @Html.AntiForgeryToken()

    <h4>Informe de Presupuesto Volumen Retail Por Estación</h4>
   
    <div class="form-horizontal">
        <div class="form-group">
            <p class="col-md-7">Este informe proporciona un resumen gráfico del volumen de galones presupuestados por el departamento comparando con lo que se ha ejecutado en el transcurso de los meses según la estación seleccionada</p>
            <br />
            <label class="control-label col-md-2 hidden">Año</label>
            <div class="col-md-2">
                <label class="control-label col-md-2 hidden">@Session["aniopresupuesto"].ToString()</label>
                @Html.EditorFor(m => m.anio, new { htmlAttributes = new { @Value = @Session["aniopresupuesto"].ToString(), @class = "hidden" } })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="empresa">Empresa</label>
            <div class="col-md-4">

                @Html.DropDownListFor(m => m.empresa, Enumerable.Empty<SelectListItem>(), htmlAttributes: new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="estacion">Unidad de Negocio</label>
            <div class="col-md-4">
                @Html.DropDownListFor(m => m.estacion, Enumerable.Empty<SelectListItem>(), htmlAttributes: new { @class = "form-control col-md-4" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-4">
                <input type="submit" value="Imprimir" class="btn btn-primary" />
                @Html.ActionLink("Regresar", "index", "home", "", new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
    }

</div>

@section scripts
{

    <script>
        $(document).ready(function () {
            $.getJSON('/presupuesto/getEmpresas', null, function (data) {
                $.each(data, function () {
                    $('#empresa').append('<option value=' +
                        this.codigo + '>' + this.descripcion + '</option>');
                });
                // ----- obtener sucursales
                $.getJSON('/presupuesto/getSucursales', { codEmpresa: $('#empresa').val() }, function (data) {
                    $.each(data, function () {
                        $('#estacion').append('<option value=' +
                            this.codigoSucursal + '>' + this.descripcion + '</option>');
                    });
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    alert('Error al obtener sucursales');
                });
            }).fail(function (jqXHR, textStatus, errorThrown) {
                alert('Error al obtener Empresas!');
            });
            // ------ fin de carga inicial --------------------------------------------------------------------------

            // ------ obtener sucursales cuando la empresa cambie
            $('#empresa').change(function () {
                $('#estacion option').remove();
                $.getJSON('/presupuesto/getSucursales', { codEmpresa: $('#empresa').val() }, function (data) {
                    $.each(data, function () {
                        $('#estacion').append('<option value=' +
                            this.codigoSucursal + '>' + this.descripcion + '</option>');
                    });
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    alert('Error al obtener sucursales');
                });
            });
        });
    </script>
}
