@model Entidades.eEmpleado

@using (Html.BeginForm("guardarNuevoPresu", "empleado", FormMethod.Post, new { id = "popupForm" }))
{
    <div class="form-horizontal">

       

        <div class="form-group">
            <label class="control-label col-md-2" for="primerNombre">Primer Nombre</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.primerNombre, new { htmlAttributes = new { @class = "form-control", @style = "text-transform: uppercase" } })
                @Html.ValidationMessageFor(model => model.primerNombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="segundoNombre">Segundo Nombre</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.segundoNombre, new { htmlAttributes = new { @class = "form-control", @style = "text-transform: uppercase" } })
                @Html.ValidationMessageFor(model => model.segundoNombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="tercerNombre">Tercer Nombre</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.tercerNombre, new { htmlAttributes = new { @class = "form-control", @style = "text-transform: uppercase" } })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="primerApellido">Primer Apellido</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.primerApellido, new { htmlAttributes = new { @class = "form-control", @style = "text-transform: uppercase" } })
                @Html.ValidationMessageFor(model => model.primerApellido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="segundoApellido">Segundo Apellido</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.segundoApellido, new { htmlAttributes = new { @class = "form-control", @style = "text-transform: uppercase" } })
                @Html.ValidationMessageFor(model => model.segundoApellido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="apellidoCasada">Apellido Casada</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.apellidoCasada, new { htmlAttributes = new { @class = "form-control", @style = "text-transform: uppercase" } })
                @Html.ValidationMessageFor(model => model.apellidoCasada, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <label class="control-label col-md-2" for="codPuesto">Puesto</label>
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.codPuesto, Enumerable.Empty<SelectListItem>(), htmlAttributes: new { @class = "form-control col-md-4" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="salario">Salario</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.salario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.salario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-primary" />
            </div>
        </div>
    </div>
}


@section scripts
{
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

    <script>
        $(document).ready(function () {
            // ----- obtener puestos x empresa
            $.getJSON('/empleado/getPuestoxEmpresa', null, function (data) {
                $.each(data, function () {
                    $('#codPuesto').append('<option value=' +
                      this.codigo + '>' + this.descripcion + '</option>');
                });            
            }).fail(function (jqXHR, textStatus, errorThrown) {
                alert('Error al obtener puestos!');
            });


        });
    </script>
}

